{"version":3,"sources":["components/Search/reducer.js","store.js","components/Search/SearchList.js","components/Search/index.js","hook.js","components/Checkbox/constant.js","components/Checkbox/CheckboxItem.js","components/Checkbox/index.js","App/index.js","index.js"],"names":["NEWS","initialState","data","loading","error","keyword","reducer","state","action","type","payload","hits","filter","item","title","story_text","store","createStore","applyMiddleware","thunk","memo","useSelector","highlightKeyword","__html","replace","RegExp","text","className","length","map","objectID","key","dangerouslySetInnerHTML","dispatch","useDispatch","useState","setKeyword","effect","delay","deps","callback","useCallback","timeoutId","useRef","useEffect","clearTimeout","current","setTimeout","useDebounce","query","a","fetch","response","json","handleChange","e","target","value","onChange","placeholder","CHECKBOX_STATUS","status","onClick","checkboxRef","indeterminate","checked","ref","name","NESTED_OBJECT","items","checkboxStatus","setCheckboxStatus","nestedObj","useMemo","setParent","uuidv4","forEach","el","parent","handleToggle","nextStatus","updateChildrenStatus","updateParentStatus","countCheckedChildren","reduce","sum","countPartialCheckedChildren","renderCheckbox","style","marginLeft","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e4ffd674.chunk.js","sourcesContent":["const NEWS = {\n  FETCHING: 'NEWS_FETCHING',\n  SUCCESS: 'NEWS_FETCH_SUCCESS',\n  FAIL: 'NEWS_FETCH_FAIL',\n};\n\nexport const fetchNews = (query) => async (dispatch) => {\n  dispatch({ type: NEWS.FETCHING });\n  try {\n    const response = await fetch(\n      `https://hn.algolia.com/api/v1/search?query=${query}`\n    );\n    dispatch({\n      type: NEWS.SUCCESS,\n      payload: await response.json(),\n      keyword: query,\n    });\n  } catch (error) {\n    dispatch({ type: NEWS.FAIL, payload: error });\n  }\n};\n\nconst initialState = {\n  data: [],\n  loading: null,\n  error: null,\n  keyword: '',\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case NEWS.FETCHING:\n      return { ...state, loading: true };\n    case NEWS.SUCCESS:\n      // remove items dont have title and story_text\n      const data = action.payload?.hits?.filter(\n        (item) => item.title || item.story_text\n      );\n      return { loading: false, data, error: null, keyword: action.keyword };\n    case NEWS.FAIL:\n      return { loading: false, error: action.payload, data: [] };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { applyMiddleware, createStore } from 'redux';\nimport reducer from './components/Search/reducer';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nexport default store;\n","import React, { memo } from 'react';\nimport { useSelector } from 'react-redux';\n\nconst SearchList = ({ keyword }) => {\n  const { data, loading, error } = useSelector((state) => state);\n\n  const highlightKeyword = (title) => {\n    if (!keyword) return { __html: title };\n    return {\n      __html: title?.replace(\n        RegExp(keyword, 'gi'),\n        (text) => `<em>${text}</em>` ?? title\n      ),\n    };\n  };\n\n  const renderLoading = () => {\n    if (!loading || data.length > 0) return null;\n    return <div className=\"news-loading\">Loading...</div>;\n  };\n\n  const renderEmpty = () => {\n    if (loading || data.length > 0) return null;\n    return <div className=\"news-empty\">Not Found</div>;\n  };\n\n  const renderError = () => {\n    if (!error || loading) return null;\n    return <div className=\"news-error\">Has Error: {error}</div>;\n  };\n\n  // prevent show Not found when component init\n  if (loading === null) return null;\n  return (\n    <div className=\"news-container\">\n      {renderLoading()}\n      {data?.map((item) => {\n        const { title, objectID, story_text } = item;\n        return (\n          <div key={objectID} className=\"news-item\">\n            <div\n              className=\"news-item-title\"\n              dangerouslySetInnerHTML={highlightKeyword(title)}\n            />\n            <div\n              className=\"news-item-content\"\n              dangerouslySetInnerHTML={highlightKeyword(story_text)}\n            />\n          </div>\n        );\n      })}\n      {renderEmpty()}\n      {renderError()}\n    </div>\n  );\n};\n\nexport default memo(SearchList);\n","import React, { memo, useCallback, useState } from 'react';\nimport SearchList from './SearchList';\nimport { useDispatch } from 'react-redux';\nimport { fetchNews } from './reducer';\nimport './Search.css';\nimport { useDebounce } from '../../hook';\n\nconst Search = () => {\n  const dispatch = useDispatch();\n  const [keyword, setKeyword] = useState('');\n\n  useDebounce(() => dispatch(fetchNews(keyword)), 200, [keyword]);\n\n  const handleChange = useCallback((e) => {\n    setKeyword(e.target.value);\n  }, []);\n\n  return (\n    <>\n      <div className=\"search-input-container flex-row align-center\">\n        <input\n          onChange={handleChange}\n          placeholder=\"Searchâ€¦\"\n          className=\"search-input\"\n        />\n      </div>\n      <SearchList keyword={keyword} />\n    </>\n  );\n};\n\nexport default memo(Search);\n","import { useCallback, useEffect, useRef } from 'react';\n\nexport const useDebounce = (effect, delay, deps) => {\n  const callback = useCallback(effect, deps);\n  const timeoutId = useRef();\n\n  useEffect(() => {\n    clearTimeout(timeoutId.current);\n    timeoutId.current = setTimeout(callback, delay);\n\n    return () => clearTimeout(timeoutId.current);\n  }, [callback, delay]);\n};\n","export const CHECKBOX_STATUS = {\n  CHECKED: 1,\n  UNCHECKED: 0,\n  PARTIAL_CHECKED: -1,\n};\n","import { CHECKBOX_STATUS } from './constant';\nimport React, { memo, useEffect, useRef } from 'react';\n\nconst CheckboxItem = ({ status, onClick, item }) => {\n  const checkboxRef = useRef();\n\n  useEffect(() => {\n    // Currently, React not support an indeterminate prop for checkbox inputs,\n    // so I workaround by set indeterminate property via DomNode\n    checkboxRef.current.indeterminate =\n      status === CHECKBOX_STATUS.PARTIAL_CHECKED;\n  }, [status]);\n\n  return (\n    <div>\n      <input\n        type=\"checkbox\"\n        checked={status === CHECKBOX_STATUS.CHECKED}\n        ref={checkboxRef}\n        onClick={() => onClick(item)}\n      />\n      <span>{item.name}</span>\n    </div>\n  );\n};\n\nexport default memo(CheckboxItem);\n","import React, { memo, useCallback, useMemo, useState } from 'react';\nimport { CHECKBOX_STATUS } from './constant';\nimport CheckboxItem from './CheckboxItem';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst NESTED_OBJECT = {\n  name: 'level 1',\n  items: [\n    {\n      name: 'level 1.1',\n      items: [\n        {\n          name: 'level 1.1.1',\n        },\n        {\n          name: 'level 1.1.2',\n          items: [\n            {\n              name: 'level 1.2.1',\n              items: [\n                {\n                  name: 'level 1.2.1.1',\n                  items: [\n                    {\n                      name: 'level 1.2.1.1.1',\n                    },\n                    {\n                      name: 'level 1.2.1.1.2',\n                    },\n                  ],\n                },\n                {\n                  name: 'level 1.2.1.2',\n                },\n              ],\n            },\n          ],\n        },\n        {\n          name: 'level 1.1.3',\n          items: [\n            {\n              name: 'level 1.1.3.1',\n            },\n            {\n              name: 'level 1.1.3.2',\n            },\n          ],\n        },\n      ],\n    },\n    {\n      name: 'level 1.2',\n      items: [\n        {\n          name: 'level 1.2.1',\n        },\n      ],\n    },\n  ],\n};\n\nconst Checkbox = () => {\n  // Obj contain all status of checkbox, accessed by key\n  const [checkboxStatus, setCheckboxStatus] = useState({});\n  const nestedObj = useMemo(() => {\n    const setParent = (item) => {\n      item.key = uuidv4();\n      if (item.items) {\n        item.items.forEach((el) => {\n          el.parent = item;\n          setParent(el);\n        });\n      }\n    };\n\n    setParent(NESTED_OBJECT);\n    return NESTED_OBJECT;\n  }, []);\n\n  const handleToggle = useCallback((item) => {\n    //prevent stale closures\n    setCheckboxStatus((checkboxStatus) => {\n      const { key, parent } = item;\n\n      const nextStatus =\n        checkboxStatus[key] === CHECKBOX_STATUS.CHECKED\n          ? CHECKBOX_STATUS.UNCHECKED\n          : CHECKBOX_STATUS.CHECKED;\n\n      const updateChildrenStatus = (item, status) => {\n        const { key, items } = item;\n        checkboxStatus[key] = status;\n        if (items) {\n          items.forEach((el) => {\n            updateChildrenStatus(el, status);\n          });\n        }\n      };\n      updateChildrenStatus(item, nextStatus);\n\n      const updateParentStatus = (item) => {\n        if (!item) return;\n\n        const { items, parent, key } = item;\n        const countCheckedChildren = items.reduce(\n          (sum, el) =>\n            (sum += checkboxStatus[el.key] === CHECKBOX_STATUS.CHECKED),\n          0\n        );\n        const countPartialCheckedChildren = items.reduce(\n          (sum, el) =>\n            (sum += checkboxStatus[el.key] === CHECKBOX_STATUS.PARTIAL_CHECKED),\n          0\n        );\n\n        let status;\n        if (countCheckedChildren === items.length)\n          status = CHECKBOX_STATUS.CHECKED;\n        else if (countPartialCheckedChildren > 0 || countCheckedChildren > 0)\n          status = CHECKBOX_STATUS.PARTIAL_CHECKED;\n        else status = CHECKBOX_STATUS.UNCHECKED;\n\n        checkboxStatus[key] = status;\n\n        updateParentStatus(parent);\n      };\n      updateParentStatus(parent);\n\n      return { ...checkboxStatus };\n    });\n  }, []);\n\n  const renderCheckbox = (item) => {\n    const { items, key } = item;\n    return (\n      <div key={key}>\n        <CheckboxItem\n          item={item}\n          status={checkboxStatus[key]}\n          onClick={handleToggle}\n        />\n        <div style={{ marginLeft: 20 }}>\n          {items?.map((el) => renderCheckbox(el))}\n        </div>\n      </div>\n    );\n  };\n\n  return renderCheckbox(nestedObj);\n};\n\nexport default memo(Checkbox);\n","import React from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport store from '../store';\nimport Search from '../components/Search';\nimport Checkbox from '../components/Checkbox';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <div className=\"flex-row\">\n        <div className=\"app-content\">\n          <Search />\n        </div>\n        <div className=\"divider-horizontal\" />\n        <div className=\"app-content\">\n          <Checkbox />\n        </div>\n      </div>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}